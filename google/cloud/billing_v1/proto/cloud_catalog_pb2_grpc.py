# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!

import grpc

from google.cloud.billing_v1.proto import (
    cloud_catalog_pb2 as google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2,
)


class CloudCatalogStub(object):
    """A catalog of Google Cloud Platform services and SKUs.
  Provides pricing information and metadata on Google Cloud Platform services
  and SKUs.
  """

    def __init__(self, channel):
        """Constructor.

    Args:
      channel: A grpc.Channel.
    """
        self.ListServices = channel.unary_unary(
            "/google.cloud.billing.v1.CloudCatalog/ListServices",
            request_serializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListServicesRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListServicesResponse.FromString,
        )
        self.ListSkus = channel.unary_unary(
            "/google.cloud.billing.v1.CloudCatalog/ListSkus",
            request_serializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListSkusRequest.SerializeToString,
            response_deserializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListSkusResponse.FromString,
        )


class CloudCatalogServicer(object):
    """A catalog of Google Cloud Platform services and SKUs.
  Provides pricing information and metadata on Google Cloud Platform services
  and SKUs.
  """

    def ListServices(self, request, context):
        """Lists all public cloud services.
    """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ListSkus(self, request, context):
        """Lists all publicly available SKUs for a given cloud service.
    """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_CloudCatalogServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ListServices": grpc.unary_unary_rpc_method_handler(
            servicer.ListServices,
            request_deserializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListServicesRequest.FromString,
            response_serializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListServicesResponse.SerializeToString,
        ),
        "ListSkus": grpc.unary_unary_rpc_method_handler(
            servicer.ListSkus,
            request_deserializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListSkusRequest.FromString,
            response_serializer=google_dot_cloud_dot_billing__v1_dot_proto_dot_cloud__catalog__pb2.ListSkusResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "google.cloud.billing.v1.CloudCatalog", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
